<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="main開啟主選單.ShortcutKeys" type="System.Windows.Forms.Keys, System.Windows.Forms">
    <value>Ctrl+E</value>
  </data>
  <data name="main開啟主選單.Text" xml:space="preserve">
    <value>開啟主選單</value>
  </data>
  <data name="main選項.ShortcutKeyDisplayString" xml:space="preserve">
    <value>Ctrl+,</value>
  </data>
  <data name="main選項.ShortcutKeys" type="System.Windows.Forms.Keys, System.Windows.Forms">
    <value>Ctrl+Oemcomma</value>
  </data>
  <data name="main選項.Text" xml:space="preserve">
    <value>選項</value>
  </data>
  <data name="main關閉.ShortcutKeys" type="System.Windows.Forms.Keys, System.Windows.Forms">
    <value>Ctrl+X</value>
  </data>
  <data name="main關閉.Text" xml:space="preserve">
    <value>關閉</value>
  </data>
  <data name="main功能.Text" xml:space="preserve">
    <value>功能</value>
  </data>
  <data name="main工具.Text" xml:space="preserve">
    <value>工具</value>
  </data>
  <data name="main關於.Text" xml:space="preserve">
    <value>關於</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="menuStrip1.Size" type="System.Drawing.Size, System.Drawing">
    <value>582, 28</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABJSUkAXl5eBCIiIjkSEhJ9EBAQihoaGlk4ODgSExMTAOrq6gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACsrKwAAAAAACgoKCsUFBR5IiIiP////wFra2sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        /wFbW1sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADBwcEAwsLCALOz
        swC5ubkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6enpABgYGAA7OzsRGxsbVxAQ
        EIscHBxoVVVVB0xMTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////8D/w/+Af4P/gD8B/4w+Af+MPAH/gD
        gD/4AQB//AAA//4AAf//4AP///AH///4D///8Af//+AAf//DAD//h4Af/g/AH/4fwB/8H8Ef+D/An/h/
        4H/8//B///////////////////////////8=
</value>
  </data>
</root>